diff --git a/node_modules/aleo-wasm-bundler/dist/index.cjs.js b/node_modules/aleo-wasm-bundler/dist/index.cjs.js
index 2a8b996..067afb7 100644
--- a/node_modules/aleo-wasm-bundler/dist/index.cjs.js
+++ b/node_modules/aleo-wasm-bundler/dist/index.cjs.js
@@ -1,18 +1,18 @@
 'use strict';
 
 function getAugmentedNamespace(n) {
-	if (n.__esModule) return n;
-	var a = Object.defineProperty({}, '__esModule', {value: true});
-	Object.keys(n).forEach(function (k) {
-		var d = Object.getOwnPropertyDescriptor(n, k);
-		Object.defineProperty(a, k, d.get ? d : {
-			enumerable: true,
-			get: function () {
-				return n[k];
-			}
-		});
-	});
-	return a;
+    if (n.__esModule) return n;
+    var a = Object.defineProperty({}, '__esModule', { value: true });
+    Object.keys(n).forEach(function (k) {
+        var d = Object.getOwnPropertyDescriptor(n, k);
+        Object.defineProperty(a, k, d.get ? d : {
+            enumerable: true,
+            get: function () {
+                return n[k];
+            }
+        });
+    });
+    return a;
 }
 
 let wasm;
@@ -38,81 +38,81 @@ function TextEncoder() {
 }
 
 TextEncoder.prototype.encode = function (string) {
-  var octets = [];
-  if (!string) {
+    var octets = [];
+    if (!string) {
+        return octets;
+    }
+    var length = string.length;
+    var i = 0;
+    while (i < length) {
+        var codePoint = string.codePointAt(i);
+        var c = 0;
+        var bits = 0;
+        if (codePoint <= 0x0000007F) {
+            c = 0;
+            bits = 0x00;
+        } else if (codePoint <= 0x000007FF) {
+            c = 6;
+            bits = 0xC0;
+        } else if (codePoint <= 0x0000FFFF) {
+            c = 12;
+            bits = 0xE0;
+        } else if (codePoint <= 0x001FFFFF) {
+            c = 18;
+            bits = 0xF0;
+        }
+        octets.push(bits | (codePoint >> c));
+        c -= 6;
+        while (c >= 0) {
+            octets.push(0x80 | ((codePoint >> c) & 0x3F));
+            c -= 6;
+        }
+        i += codePoint >= 0x10000 ? 2 : 1;
+    }
     return octets;
-  }
-  var length = string.length;
-  var i = 0;
-  while (i < length) {
-    var codePoint = string.codePointAt(i);
-    var c = 0;
-    var bits = 0;
-    if (codePoint <= 0x0000007F) {
-      c = 0;
-      bits = 0x00;
-    } else if (codePoint <= 0x000007FF) {
-      c = 6;
-      bits = 0xC0;
-    } else if (codePoint <= 0x0000FFFF) {
-      c = 12;
-      bits = 0xE0;
-    } else if (codePoint <= 0x001FFFFF) {
-      c = 18;
-      bits = 0xF0;
-    }
-    octets.push(bits | (codePoint >> c));
-    c -= 6;
-    while (c >= 0) {
-      octets.push(0x80 | ((codePoint >> c) & 0x3F));
-      c -= 6;
-    }
-    i += codePoint >= 0x10000 ? 2 : 1;
-  }
-  return octets;
 };
 
 function TextDecoder() {
 }
 
 TextDecoder.prototype.decode = function (octets) {
-  var string = "";
-  if (!octets) {
-    return string; 
-  }
-  var i = 0;
-  while (i < octets.length) {
-    var octet = octets[i];
-    var bytesNeeded = 0;
-    var codePoint = 0;
-    if (octet <= 0x7F) {
-      bytesNeeded = 0;
-      codePoint = octet & 0xFF;
-    } else if (octet <= 0xDF) {
-      bytesNeeded = 1;
-      codePoint = octet & 0x1F;
-    } else if (octet <= 0xEF) {
-      bytesNeeded = 2;
-      codePoint = octet & 0x0F;
-    } else if (octet <= 0xF4) {
-      bytesNeeded = 3;
-      codePoint = octet & 0x07;
-    }
-    if (octets.length - i - bytesNeeded > 0) {
-      var k = 0;
-      while (k < bytesNeeded) {
-        octet = octets[i + k + 1];
-        codePoint = (codePoint << 6) | (octet & 0x3F);
-        k += 1;
-      }
-    } else {
-      codePoint = 0xFFFD;
-      bytesNeeded = octets.length - i;
+    var string = "";
+    if (!octets) {
+        return string;
+    }
+    var i = 0;
+    while (i < octets.length) {
+        var octet = octets[i];
+        var bytesNeeded = 0;
+        var codePoint = 0;
+        if (octet <= 0x7F) {
+            bytesNeeded = 0;
+            codePoint = octet & 0xFF;
+        } else if (octet <= 0xDF) {
+            bytesNeeded = 1;
+            codePoint = octet & 0x1F;
+        } else if (octet <= 0xEF) {
+            bytesNeeded = 2;
+            codePoint = octet & 0x0F;
+        } else if (octet <= 0xF4) {
+            bytesNeeded = 3;
+            codePoint = octet & 0x07;
+        }
+        if (octets.length - i - bytesNeeded > 0) {
+            var k = 0;
+            while (k < bytesNeeded) {
+                octet = octets[i + k + 1];
+                codePoint = (codePoint << 6) | (octet & 0x3F);
+                k += 1;
+            }
+        } else {
+            codePoint = 0xFFFD;
+            bytesNeeded = octets.length - i;
+        }
+        string += String.fromCodePoint(codePoint);
+        i += bytesNeeded + 1;
     }
-    string += String.fromCodePoint(codePoint);
-    i += bytesNeeded + 1;
-  }
-  return string
+    return string
 };
 
 let cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });
@@ -166,16 +166,16 @@ let cachedTextEncoder = new TextEncoder('utf-8');
 
 const encodeString = (typeof cachedTextEncoder.encodeInto === 'function'
     ? function (arg, view) {
-    return cachedTextEncoder.encodeInto(arg, view);
-}
+        return cachedTextEncoder.encodeInto(arg, view);
+    }
     : function (arg, view) {
-    const buf = cachedTextEncoder.encode(arg);
-    view.set(buf);
-    return {
-        read: arg.length,
-        written: buf.length
-    };
-});
+        const buf = cachedTextEncoder.encode(arg);
+        view.set(buf);
+        return {
+            read: arg.length,
+            written: buf.length
+        };
+    });
 
 function passStringToWasm0(arg, malloc, realloc) {
 
@@ -892,176 +892,163 @@ class Transaction {
 }
 
 async function load(module, imports) {
-    if (typeof Response === 'function' && module instanceof Response) {
-        if (typeof WebAssembly.instantiateStreaming === 'function') {
-            try {
-                return await WebAssembly.instantiateStreaming(module, imports);
-
-            } catch (e) {
-                if (module.headers.get('Content-Type') != 'application/wasm') {
-                    console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e);
-
-                } else {
-                    throw e;
-                }
-            }
-        }
+    const instance = await WebAssembly.instantiate(module, imports);
 
-        const bytes = await module.arrayBuffer();
-        return await WebAssembly.instantiate(bytes, imports);
+    if (instance instanceof WebAssembly.Instance) {
+        return { instance, module };
 
     } else {
-        const instance = await WebAssembly.instantiate(module, imports);
-
-        if (instance instanceof WebAssembly.Instance) {
-            return { instance, module };
-
-        } else {
-            return instance;
-        }
+        return instance;
     }
 }
 
-async function init(input) {
-    if (typeof input === 'undefined') {
-        input = new URL('aleo_wasm_bg.wasm', (typeof document === 'undefined' ? new (require('u' + 'rl').URL)('file:' + __filename).href : (document.currentScript && document.currentScript.src || new URL('index.cjs.js', document.baseURI).href)));
-    }
+async function init(module) {
     const imports = {};
     imports.wbg = {};
-    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {
+    imports.wbg.__wbindgen_string_new = function (arg0, arg1) {
         var ret = getStringFromWasm0(arg0, arg1);
         return addHeapObject(ret);
     };
-    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {
+    imports.wbg.__wbindgen_object_drop_ref = function (arg0) {
         takeObject(arg0);
     };
-    imports.wbg.__wbg_new_693216e109162396 = function() {
+    imports.wbg.__wbg_new_693216e109162396 = function () {
         var ret = new Error();
         return addHeapObject(ret);
     };
-    imports.wbg.__wbg_stack_0ddaca5d1abfb52f = function(arg0, arg1) {
+    imports.wbg.__wbg_stack_0ddaca5d1abfb52f = function (arg0, arg1) {
         var ret = getObject(arg1).stack;
         var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
         var len0 = WASM_VECTOR_LEN;
         getInt32Memory0()[arg0 / 4 + 1] = len0;
         getInt32Memory0()[arg0 / 4 + 0] = ptr0;
     };
-    imports.wbg.__wbg_error_09919627ac0992f5 = function(arg0, arg1) {
+    imports.wbg.__wbg_error_09919627ac0992f5 = function (arg0, arg1) {
         try {
             console.error(getStringFromWasm0(arg0, arg1));
         } finally {
             wasm.__wbindgen_free(arg0, arg1);
         }
     };
-    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {
+    imports.wbg.__wbindgen_object_clone_ref = function (arg0) {
         var ret = getObject(arg0);
         return addHeapObject(ret);
     };
-    imports.wbg.__wbg_getRandomValues_3e46aa268da0fed1 = function() { return handleError(function (arg0, arg1) {
-        getObject(arg0).getRandomValues(getObject(arg1));
-    }, arguments) };
-    imports.wbg.__wbg_randomFillSync_59fcc2add91fe7b3 = function() { return handleError(function (arg0, arg1, arg2) {
-        getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));
-    }, arguments) };
-    imports.wbg.__wbg_process_f2b73829dbd321da = function(arg0) {
+    imports.wbg.__wbg_getRandomValues_3e46aa268da0fed1 = function () {
+        return handleError(function (arg0, arg1) {
+            getObject(arg0).getRandomValues(getObject(arg1));
+        }, arguments)
+    };
+    imports.wbg.__wbg_randomFillSync_59fcc2add91fe7b3 = function () {
+        return handleError(function (arg0, arg1, arg2) {
+            getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));
+        }, arguments)
+    };
+    imports.wbg.__wbg_process_f2b73829dbd321da = function (arg0) {
         var ret = getObject(arg0).process;
         return addHeapObject(ret);
     };
-    imports.wbg.__wbindgen_is_object = function(arg0) {
+    imports.wbg.__wbindgen_is_object = function (arg0) {
         const val = getObject(arg0);
-        var ret = typeof(val) === 'object' && val !== null;
+        var ret = typeof (val) === 'object' && val !== null;
         return ret;
     };
-    imports.wbg.__wbg_versions_cd82f79c98672a9f = function(arg0) {
+    imports.wbg.__wbg_versions_cd82f79c98672a9f = function (arg0) {
         var ret = getObject(arg0).versions;
         return addHeapObject(ret);
     };
-    imports.wbg.__wbg_node_ee3f6da4130bd35f = function(arg0) {
+    imports.wbg.__wbg_node_ee3f6da4130bd35f = function (arg0) {
         var ret = getObject(arg0).node;
         return addHeapObject(ret);
     };
-    imports.wbg.__wbindgen_is_string = function(arg0) {
-        var ret = typeof(getObject(arg0)) === 'string';
+    imports.wbg.__wbindgen_is_string = function (arg0) {
+        var ret = typeof (getObject(arg0)) === 'string';
         return ret;
     };
-    imports.wbg.__wbg_modulerequire_0a83c0c31d12d2c7 = function() { return handleError(function (arg0, arg1) {
-        var ret = module.require(getStringFromWasm0(arg0, arg1));
-        return addHeapObject(ret);
-    }, arguments) };
-    imports.wbg.__wbg_crypto_9e3521ed42436d35 = function(arg0) {
+    imports.wbg.__wbg_modulerequire_0a83c0c31d12d2c7 = function () {
+        return handleError(function (arg0, arg1) {
+            var ret = module.require(getStringFromWasm0(arg0, arg1));
+            return addHeapObject(ret);
+        }, arguments)
+    };
+    imports.wbg.__wbg_crypto_9e3521ed42436d35 = function (arg0) {
         var ret = getObject(arg0).crypto;
         return addHeapObject(ret);
     };
-    imports.wbg.__wbg_msCrypto_c429c3f8f7a70bb5 = function(arg0) {
+    imports.wbg.__wbg_msCrypto_c429c3f8f7a70bb5 = function (arg0) {
         var ret = getObject(arg0).msCrypto;
         return addHeapObject(ret);
     };
-    imports.wbg.__wbg_newnoargs_f579424187aa1717 = function(arg0, arg1) {
+    imports.wbg.__wbg_newnoargs_f579424187aa1717 = function (arg0, arg1) {
         var ret = new Function(getStringFromWasm0(arg0, arg1));
         return addHeapObject(ret);
     };
-    imports.wbg.__wbg_call_89558c3e96703ca1 = function() { return handleError(function (arg0, arg1) {
-        var ret = getObject(arg0).call(getObject(arg1));
-        return addHeapObject(ret);
-    }, arguments) };
-    imports.wbg.__wbg_self_e23d74ae45fb17d1 = function() { return handleError(function () {
-        var ret = self.self;
-        return addHeapObject(ret);
-    }, arguments) };
-    imports.wbg.__wbg_window_b4be7f48b24ac56e = function() { return handleError(function () {
-        var ret = window.window;
-        return addHeapObject(ret);
-    }, arguments) };
-    imports.wbg.__wbg_globalThis_d61b1f48a57191ae = function() { return handleError(function () {
-        var ret = globalThis.globalThis;
-        return addHeapObject(ret);
-    }, arguments) };
-    imports.wbg.__wbg_global_e7669da72fd7f239 = function() { return handleError(function () {
-        var ret = global.global;
-        return addHeapObject(ret);
-    }, arguments) };
-    imports.wbg.__wbindgen_is_undefined = function(arg0) {
+    imports.wbg.__wbg_call_89558c3e96703ca1 = function () {
+        return handleError(function (arg0, arg1) {
+            var ret = getObject(arg0).call(getObject(arg1));
+            return addHeapObject(ret);
+        }, arguments)
+    };
+    imports.wbg.__wbg_self_e23d74ae45fb17d1 = function () {
+        return handleError(function () {
+            var ret = self.self;
+            return addHeapObject(ret);
+        }, arguments)
+    };
+    imports.wbg.__wbg_window_b4be7f48b24ac56e = function () {
+        return handleError(function () {
+            var ret = window.window;
+            return addHeapObject(ret);
+        }, arguments)
+    };
+    imports.wbg.__wbg_globalThis_d61b1f48a57191ae = function () {
+        return handleError(function () {
+            var ret = globalThis.globalThis;
+            return addHeapObject(ret);
+        }, arguments)
+    };
+    imports.wbg.__wbg_global_e7669da72fd7f239 = function () {
+        return handleError(function () {
+            var ret = global.global;
+            return addHeapObject(ret);
+        }, arguments)
+    };
+    imports.wbg.__wbindgen_is_undefined = function (arg0) {
         var ret = getObject(arg0) === undefined;
         return ret;
     };
-    imports.wbg.__wbg_buffer_5e74a88a1424a2e0 = function(arg0) {
+    imports.wbg.__wbg_buffer_5e74a88a1424a2e0 = function (arg0) {
         var ret = getObject(arg0).buffer;
         return addHeapObject(ret);
     };
-    imports.wbg.__wbg_new_e3b800e570795b3c = function(arg0) {
+    imports.wbg.__wbg_new_e3b800e570795b3c = function (arg0) {
         var ret = new Uint8Array(getObject(arg0));
         return addHeapObject(ret);
     };
-    imports.wbg.__wbg_set_5b8081e9d002f0df = function(arg0, arg1, arg2) {
+    imports.wbg.__wbg_set_5b8081e9d002f0df = function (arg0, arg1, arg2) {
         getObject(arg0).set(getObject(arg1), arg2 >>> 0);
     };
-    imports.wbg.__wbg_length_30803400a8f15c59 = function(arg0) {
+    imports.wbg.__wbg_length_30803400a8f15c59 = function (arg0) {
         var ret = getObject(arg0).length;
         return ret;
     };
-    imports.wbg.__wbg_newwithlength_5f4ce114a24dfe1e = function(arg0) {
+    imports.wbg.__wbg_newwithlength_5f4ce114a24dfe1e = function (arg0) {
         var ret = new Uint8Array(arg0 >>> 0);
         return addHeapObject(ret);
     };
-    imports.wbg.__wbg_subarray_a68f835ca2af506f = function(arg0, arg1, arg2) {
+    imports.wbg.__wbg_subarray_a68f835ca2af506f = function (arg0, arg1, arg2) {
         var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);
         return addHeapObject(ret);
     };
-    imports.wbg.__wbindgen_throw = function(arg0, arg1) {
+    imports.wbg.__wbindgen_throw = function (arg0, arg1) {
         throw new Error(getStringFromWasm0(arg0, arg1));
     };
-    imports.wbg.__wbindgen_memory = function() {
+    imports.wbg.__wbindgen_memory = function () {
         var ret = wasm.memory;
         return addHeapObject(ret);
     };
 
-    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
-        input = fetch(input);
-    }
-
-
-
-    const { instance, module } = await load(await input, imports);
+    const { instance, module } = await load(module, imports);
 
     wasm = instance.exports;
     init.__wbindgen_wasm_module = module;
@@ -1070,12 +1057,12 @@ async function init(input) {
 }
 
 var aleo_wasm = /*#__PURE__*/Object.freeze({
-	__proto__: null,
-	Account: Account,
-	Ciphertext: Ciphertext,
-	Record: Record,
-	Transaction: Transaction,
-	'default': init
+    __proto__: null,
+    Account: Account,
+    Ciphertext: Ciphertext,
+    Record: Record,
+    Transaction: Transaction,
+    'default': init
 });
 
 var require$$0 = /*@__PURE__*/getAugmentedNamespace(aleo_wasm);
